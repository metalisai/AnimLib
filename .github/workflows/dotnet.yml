# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET Linux build

on:
  push:
    branches: [ "master", "ci-test" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Install dependencies
      run: |
          sudo apt-get update
          sudo apt-get install -y libfreetype6 libfreetype6-dev
    - name: Install Mesa and EGL dependencies
      run: |
        sudo apt install -y \
          libegl1 \
          libgles2 \
          libgl1-mesa-dri \
          libegl-mesa0 \
          libglapi-mesa \
          libegl1-mesa-dev
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build native
      run: ./build.sh
      working-directory: ./AnimLib.ImGui/src
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      env:
        LIBGL_ALWAYS_SOFTWARE: "1"
        MESA_LOADER_DRIVER_OVERRIDE: "llvmpipe"
        EGL_PLATFORM: "surfaceless"
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/**/coverage.cobertura.xml
        badge: true
        fail_below_min: false
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'
